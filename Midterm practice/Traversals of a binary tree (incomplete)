import java.util.*;

class TreeIterator {
  /**
   * @param tree
   *     The input BinaryTree.
   * @param order
   *     The order in which the binary tree nodes need to be returned: pre-order, in-order, or post-order.
   * @return A list of all nodes of the tree, in the specified order.
   */
  public static List<BinaryTree> getAllNodesDF(BinaryTree tree, Order order) {
    List<BinaryTree> list = new LinkedList<BinaryTree>();
    if(tree == null){
      return list;
    }
    if(order.equals(Order.PRE)){
       list.add(tree);
       getAllNodesDF(tree.getLeft(), Order.PRE);
       getAllNodesDF(tree.getRight(), Order.PRE);
       return list;
    }
    else if(order.equals(Order.IN)){
       getAllNodesDF(tree.getLeft(), Order.IN);
       list.add(tree);
       getAllNodesDF(tree.getRight(), Order.IN);
       return list;
    }
    else if(order.equals(Order.POST)){
      getAllNodesDF(tree.getLeft(), Order.POST);
      getAllNodesDF(tree.getRight(), Order.POST);
        list.add(tree);
       return list;
    }
    
    
    
    
    return list;
  }
}
//
