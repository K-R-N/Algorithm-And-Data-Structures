import java.util.*;

class Solution {

  /**
   * Merges two sorted arrays such that the resulting array has all elements
   * from both arrays and is also sorted. Assumes that the elements in the
   * given arrays are sorted in non-decreasing order. If there are duplicate
   * elements in the input arrays, these should also be present in the
   * resulting array. If both arrays are null the result should be null, or a
   * copy of the non-null array if only one is null.
   *
   * Efficiency requirements: merge the two arrays in a single pass.
   *
   * @param arr1 first sorted array to be merged
   * @param arr2 second sorted array to be merged
   * @return sorted array containing all elements from both arrays
   */
  public static int[] merge(int[] arr1, int[] arr2) {
    if(arr1.length == 0){
      if(arr2.length == 0){
        return null;
      }
      return arr2;
    }
    else if(arr2.length == 0){
      return arr1;
  }
  else{
    int[] a = new int[arr1.length + arr2.length];
    int i = 0;
    int j = 0;
    int k = 0;
    while (i < arr1.length && j < arr2.length)
    {
        if (arr1[i] < arr2[j])
        {
            a[k] = arr1[i];
            i++;
        }
        else
        {
            a[k] = arr2[j];
            j++;
        }
        k++;
    }

    while (i < arr1.length)
    {
        a[k] = arr1[i];
        i++;
        k++;
    }

    while (j < arr2.length)
    {
        a[k] = arr2[j];
        j++;
        k++;
    }

    return a;
    
    
    
    
  }
  }
}
//
