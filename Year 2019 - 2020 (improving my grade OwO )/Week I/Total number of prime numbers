/*
Implement the following two Java methods isPrime and numPrimes:

    isPrime takes an integer value n and returns true if the integer is prime, false otherwise.
    numPrimes takes an integer value n and returns the number of prime numbers that are less or equal than n.
/*


class Solution {

  /**
   * Checks whether the given integer value is a prime number.
   *
   * @param n integer value to be checked if it is a prime number or not
   * @return returns true if n is prime, false otherwise
   */
  public static boolean isPrime(int n) {
    boolean prime = false;
    if(n==0 || n ==1) return prime;
    for(int i = 2; i <= n/2; ++i) {
            if(n % i == 0)
            {
                prime = true;
                break;
            }
      }
      return !prime;
  }

  /**
   * Counts and returns the number of prime numbers that are less or equal
   * than the given integer value.
   *
   * @param n integer value defining an upper bound on the set of prime number to count
   * @return returns the number of prime numbers that are less or equal than n
   */
  public static int numPrimes(int n) {
    int count = 0;
    for(int i = 0; i <= n; i++) {
      if(isPrime(i)) {
      count++;
      }
    }
    return count;
  }
}

